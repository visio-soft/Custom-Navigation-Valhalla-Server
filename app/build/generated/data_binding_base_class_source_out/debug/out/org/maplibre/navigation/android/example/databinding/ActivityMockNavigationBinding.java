// Generated by view binder compiler. Do not edit!
package org.maplibre.navigation.android.example.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.maplibre.android.maps.MapView;
import org.maplibre.navigation.android.example.R;

public final class ActivityMockNavigationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView bannerText;

  @NonNull
  public final FloatingActionButton clearPoints;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final FloatingActionButton newLocationFab;

  @NonNull
  public final Button startRouteButton;

  private ActivityMockNavigationBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView bannerText, @NonNull FloatingActionButton clearPoints,
      @NonNull ConstraintLayout container, @NonNull ImageView imageView, @NonNull MapView mapView,
      @NonNull FloatingActionButton newLocationFab, @NonNull Button startRouteButton) {
    this.rootView = rootView;
    this.bannerText = bannerText;
    this.clearPoints = clearPoints;
    this.container = container;
    this.imageView = imageView;
    this.mapView = mapView;
    this.newLocationFab = newLocationFab;
    this.startRouteButton = startRouteButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMockNavigationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMockNavigationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_mock_navigation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMockNavigationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bannerText;
      TextView bannerText = ViewBindings.findChildViewById(rootView, id);
      if (bannerText == null) {
        break missingId;
      }

      id = R.id.clearPoints;
      FloatingActionButton clearPoints = ViewBindings.findChildViewById(rootView, id);
      if (clearPoints == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.newLocationFab;
      FloatingActionButton newLocationFab = ViewBindings.findChildViewById(rootView, id);
      if (newLocationFab == null) {
        break missingId;
      }

      id = R.id.startRouteButton;
      Button startRouteButton = ViewBindings.findChildViewById(rootView, id);
      if (startRouteButton == null) {
        break missingId;
      }

      return new ActivityMockNavigationBinding((ConstraintLayout) rootView, bannerText, clearPoints,
          container, imageView, mapView, newLocationFab, startRouteButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
